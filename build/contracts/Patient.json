{
  "contractName": "Patient",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "records",
      "outputs": [
        {
          "internalType": "contract Record",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_data",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_encryptedKey1",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_encryptedKey2",
          "type": "string"
        }
      ],
      "name": "newRecord",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.1+commit.e6f7d5a4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_data\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_encryptedKey1\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_encryptedKey2\",\"type\":\"string\"}],\"name\":\"newRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"records\",\"outputs\":[{\"internalType\":\"contract Record\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/D/tutorials/Html_Css/My_Websites/Blockchain Projects/private-records/contracts/Patient.sol\":\"Patient\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/tutorials/Html_Css/My_Websites/Blockchain Projects/private-records/contracts/Patient.sol\":{\"keccak256\":\"0x397f04e8cc12b2258275b0c3b3acc704f28c597f8a1ab8a137626b581a160c7b\",\"urls\":[\"bzz-raw://89d37064fc4a9f37ec351d79a286f6696e79b339309cea6d684ce62b846a7783\",\"dweb:/ipfs/QmbWqnMRozbnTrMbwDv4eKv4y6VEHu87nYXKFK8iy6DSWq\"]},\"/D/tutorials/Html_Css/My_Websites/Blockchain Projects/private-records/contracts/Record.sol\":{\"keccak256\":\"0x9dadfe8ef02d83b11f3d3865e82a504be7c36e9b47632815846d19d60a9c719d\",\"urls\":[\"bzz-raw://d05df363529ea51ae8ebe5f0c2ad1ddd138bd41c1d55a7850976abde155d28c1\",\"dweb:/ipfs/QmejstbjgL3ZAMvbghzcAyymsfj4T57SfuiGghPhaxDiPC\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x004127bbacaad591318e0c0aa35c3b33f93ca4c91b0e9953bbefed6e65367b38\",\"urls\":[\"bzz-raw://8ae4e6c5d6210113e0b2aabea3b9e2fbb024c666b43524a4ac96fcdcbc354f0f\",\"dweb:/ipfs/QmZB469rjFV4RrGdyh9Cr4DM4S7z6xwpSUNC37E2mSEXJm\"]},\"@openzeppelin/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xe4f0ada67f9a65650433674f86286478dfa157d74bd298863da7898e90380141\",\"urls\":[\"bzz-raw://7c0f8653a2c5c007bfaa9a5d642b2859a9ed1e0946dd1f1e68f1f2bccb66db10\",\"dweb:/ipfs/QmRCD9roXDvzaEitN3peWrHfhrx8rscpQDZi2Zr7zQiGyF\"]}},\"version\":1}",
  "bytecode": "0x608060405260006100146100b760201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100bf565b600033905090565b610e04806100ce6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633446106714610067578063715018a6146100d55780638da5cb5b146100df5780638f32d59b1461012957806396e8d14c1461014b578063f2fde38b1461026e575b600080fd5b6100936004803603602081101561007d57600080fd5b81019080803590602001909291905050506102b2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100dd6102ee565b005b6100e7610427565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610131610450565b604051808215151515815260200191505060405180910390f35b61026c6004803603606081101561016157600080fd5b810190808035906020019064010000000081111561017e57600080fd5b82018360208201111561019057600080fd5b803590602001918460018302840111640100000000831117156101b257600080fd5b9091929391929390803590602001906401000000008111156101d357600080fd5b8201836020820111156101e557600080fd5b8035906020019184600183028401116401000000008311171561020757600080fd5b90919293919293908035906020019064010000000081111561022857600080fd5b82018360208201111561023a57600080fd5b8035906020019184600183028401116401000000008311171561025c57600080fd5b90919293919293905050506104ae565b005b6102b06004803603602081101561028457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610655565b005b600181815481106102bf57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6102f6610450565b610368576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166104926106db565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b600086866104ba610427565b87873388886040516104cb90610827565b80806020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200184810384528c8c82818152602001925080828437600081840152601f19601f8201169050808301925050508481038352898982818152602001925080828437600081840152601f19601f8201169050808301925050508481038252868682818152602001925080828437600081840152601f19601f8201169050808301925050509b505050505050505050505050604051809103906000f0801580156105e6573d6000803e3d6000fd5b5090506001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050505050565b61065d610450565b6106cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6106d8816106e3565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610769576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610da96026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610574806108358339019056fe608060405234801561001057600080fd5b50604051610574380380610574833981810160405260a081101561003357600080fd5b810190808051604051939291908464010000000082111561005357600080fd5b8382019150602082018581111561006957600080fd5b825186600182028301116401000000008211171561008657600080fd5b8083526020830192505050908051906020019080838360005b838110156100ba57808201518184015260208101905061009f565b50505050905090810190601f1680156100e75780820380516001836020036101000a031916815260200191505b50604052602001805190602001909291908051604051939291908464010000000082111561011457600080fd5b8382019150602082018581111561012a57600080fd5b825186600182028301116401000000008211171561014757600080fd5b8083526020830192505050908051906020019080838360005b8381101561017b578082015181840152602081019050610160565b50505050905090810190601f1680156101a85780820380516001836020036101000a031916815260200191505b5060405260200180519060200190929190805160405193929190846401000000008211156101d557600080fd5b838201915060208201858111156101eb57600080fd5b825186600182028301116401000000008211171561020857600080fd5b8083526020830192505050908051906020019080838360005b8381101561023c578082015181840152602081019050610221565b50505050905090810190601f1680156102695780820380516001836020036101000a031916815260200191505b506040525050508460009080519060200190610286929190610339565b5082600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090805190602001906102da929190610339565b5080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020908051906020019061032e929190610339565b5050505050506103de565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061037a57805160ff19168380011785556103a8565b828001600101855582156103a8579182015b828111156103a757825182559160200191906001019061038c565b5b5090506103b591906103b9565b5090565b6103db91905b808211156103d75760008160009055506001016103bf565b5090565b90565b610187806103ed6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806373d4a13a14610030575b600080fd5b6100386100b3565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561007857808201518184015260208101905061005d565b50505050905090810190601f1680156100a55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156101495780601f1061011e57610100808354040283529160200191610149565b820191906000526020600020905b81548152906001019060200180831161012c57829003601f168201915b50505050508156fea264697066735822122026c233ef91bf3ed82f9772ab900b5b219eb39ee283db964def423924407323e864736f6c634300060100334f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220a367c0152420100181ff534c4e4c61a4fe1f7e0385a19ed5259a5a6b3510084f64736f6c63430006010033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80633446106714610067578063715018a6146100d55780638da5cb5b146100df5780638f32d59b1461012957806396e8d14c1461014b578063f2fde38b1461026e575b600080fd5b6100936004803603602081101561007d57600080fd5b81019080803590602001909291905050506102b2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100dd6102ee565b005b6100e7610427565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610131610450565b604051808215151515815260200191505060405180910390f35b61026c6004803603606081101561016157600080fd5b810190808035906020019064010000000081111561017e57600080fd5b82018360208201111561019057600080fd5b803590602001918460018302840111640100000000831117156101b257600080fd5b9091929391929390803590602001906401000000008111156101d357600080fd5b8201836020820111156101e557600080fd5b8035906020019184600183028401116401000000008311171561020757600080fd5b90919293919293908035906020019064010000000081111561022857600080fd5b82018360208201111561023a57600080fd5b8035906020019184600183028401116401000000008311171561025c57600080fd5b90919293919293905050506104ae565b005b6102b06004803603602081101561028457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610655565b005b600181815481106102bf57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6102f6610450565b610368576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166104926106db565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b600086866104ba610427565b87873388886040516104cb90610827565b80806020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200184810384528c8c82818152602001925080828437600081840152601f19601f8201169050808301925050508481038352898982818152602001925080828437600081840152601f19601f8201169050808301925050508481038252868682818152602001925080828437600081840152601f19601f8201169050808301925050509b505050505050505050505050604051809103906000f0801580156105e6573d6000803e3d6000fd5b5090506001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050505050565b61065d610450565b6106cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6106d8816106e3565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610769576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610da96026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610574806108358339019056fe608060405234801561001057600080fd5b50604051610574380380610574833981810160405260a081101561003357600080fd5b810190808051604051939291908464010000000082111561005357600080fd5b8382019150602082018581111561006957600080fd5b825186600182028301116401000000008211171561008657600080fd5b8083526020830192505050908051906020019080838360005b838110156100ba57808201518184015260208101905061009f565b50505050905090810190601f1680156100e75780820380516001836020036101000a031916815260200191505b50604052602001805190602001909291908051604051939291908464010000000082111561011457600080fd5b8382019150602082018581111561012a57600080fd5b825186600182028301116401000000008211171561014757600080fd5b8083526020830192505050908051906020019080838360005b8381101561017b578082015181840152602081019050610160565b50505050905090810190601f1680156101a85780820380516001836020036101000a031916815260200191505b5060405260200180519060200190929190805160405193929190846401000000008211156101d557600080fd5b838201915060208201858111156101eb57600080fd5b825186600182028301116401000000008211171561020857600080fd5b8083526020830192505050908051906020019080838360005b8381101561023c578082015181840152602081019050610221565b50505050905090810190601f1680156102695780820380516001836020036101000a031916815260200191505b506040525050508460009080519060200190610286929190610339565b5082600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090805190602001906102da929190610339565b5080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020908051906020019061032e929190610339565b5050505050506103de565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061037a57805160ff19168380011785556103a8565b828001600101855582156103a8579182015b828111156103a757825182559160200191906001019061038c565b5b5090506103b591906103b9565b5090565b6103db91905b808211156103d75760008160009055506001016103bf565b5090565b90565b610187806103ed6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806373d4a13a14610030575b600080fd5b6100386100b3565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561007857808201518184015260208101905061005d565b50505050905090810190601f1680156100a55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156101495780601f1061011e57610100808354040283529160200191610149565b820191906000526020600020905b81548152906001019060200180831161012c57829003601f168201915b50505050508156fea264697066735822122026c233ef91bf3ed82f9772ab900b5b219eb39ee283db964def423924407323e864736f6c634300060100334f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220a367c0152420100181ff534c4e4c61a4fe1f7e0385a19ed5259a5a6b3510084f64736f6c63430006010033",
  "sourceMap": "110:550:1:-:0;;;719:17:6;739:12;:10;;;:12;;:::i;:::-;719:32;;770:9;761:6;;:18;;;;;;;;;;;;;;;;;;827:9;794:43;;823:1;794:43;;;;;;;;;;;;686:158;110:550:1;;789:96:5;834:15;868:10;861:17;;789:96;:::o;110:550:1:-;;;;;;;",
  "deployedSourceMap": "110:550:1:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;110:550:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;177:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;177:23:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1705:137:6;;;:::i;:::-;;920:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1271:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;209:448:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;209:448:1;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;209:448:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;209:448:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;209:448:1;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;209:448:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;209:448:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;209:448:1;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;209:448:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;209:448:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;209:448:1;;;;;;;;;;;;:::i;:::-;;1991:107:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1991:107:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;177:23:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1705:137:6:-;1124:9;:7;:9::i;:::-;1116:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1803:1:::1;1766:40;;1787:6;::::0;::::1;;;;;;;;;1766:40;;;;;;;;;;;;1833:1;1816:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1705:137::o:0;920:77::-;958:7;984:6;;;;;;;;;;;977:13;;920:77;:::o;1271:92::-;1311:4;1350:6;;;;;;;;;;;1334:22;;:12;:10;:12::i;:::-;:22;;;1327:29;;1271:92;:::o;209:448:1:-;456:13;497:5;;517:7;:5;:7::i;:::-;539:14;;568:10;593:14;;472:146;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;472:146:1;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;472:146:1;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;472:146:1;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;472:146:1;456:162;;629:7;642:6;629:20;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;629:20:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;209:448;;;;;;;:::o;1991:107:6:-;1124:9;:7;:9::i;:::-;1116:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2063:28:::1;2082:8;2063:18;:28::i;:::-;1991:107:::0;:::o;789:96:5:-;834:15;868:10;861:17;;789:96;:::o;2199:259:6:-;2305:1;2285:22;;:8;:22;;;;2264:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2415:8;2386:38;;2407:6;;;;;;;;;;;2386:38;;;;;;;;;;;;2443:8;2434:6;;:17;;;;;;;;;;;;;;;;;;2199:259;:::o;110:550:1:-;;;;;;;;:::o",
  "source": "pragma solidity ^0.6.0;\r\n\r\nimport \"@openzeppelin/contracts/ownership/Ownable.sol\";\r\nimport \"./Record.sol\";\r\n\r\ncontract Patient is Ownable {\r\n    // constructor() public {}\r\n    Record[] public records;\r\n\r\n    function newRecord(\r\n        string calldata _data,\r\n        string calldata _encryptedKey1, //for the owner\r\n        string calldata _encryptedKey2 //for the clinic\r\n    ) external {\r\n        //Should add Check if the sender is a clinic\r\n        Record record = new Record(\r\n            _data,\r\n            owner(),\r\n            _encryptedKey1,\r\n            msg.sender,\r\n            _encryptedKey2\r\n        );\r\n        records.push(record);\r\n    }\r\n}\r\n",
  "sourcePath": "D:\\tutorials\\Html_Css\\My_Websites\\Blockchain Projects\\private-records\\contracts\\Patient.sol",
  "ast": {
    "absolutePath": "/D/tutorials/Html_Css/My_Websites/Blockchain Projects/private-records/contracts/Patient.sol",
    "exportedSymbols": {
      "Patient": [
        75
      ]
    },
    "id": 76,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 38,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/ownership/Ownable.sol",
        "file": "@openzeppelin/contracts/ownership/Ownable.sol",
        "id": 39,
        "nodeType": "ImportDirective",
        "scope": 76,
        "sourceUnit": 367,
        "src": "27:55:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/tutorials/Html_Css/My_Websites/Blockchain Projects/private-records/contracts/Record.sol",
        "file": "./Record.sol",
        "id": 40,
        "nodeType": "ImportDirective",
        "scope": 76,
        "sourceUnit": 181,
        "src": "84:22:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 41,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 366,
              "src": "130:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$366",
                "typeString": "contract Ownable"
              }
            },
            "id": 42,
            "nodeType": "InheritanceSpecifier",
            "src": "130:7:1"
          }
        ],
        "contractDependencies": [
          180,
          244,
          366
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 75,
        "linearizedBaseContracts": [
          75,
          366,
          244
        ],
        "name": "Patient",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "34461067",
            "id": 45,
            "name": "records",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 75,
            "src": "177:23:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_Record_$180_$dyn_storage",
              "typeString": "contract Record[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 43,
                "name": "Record",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 180,
                "src": "177:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Record_$180",
                  "typeString": "contract Record"
                }
              },
              "id": 44,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "177:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_Record_$180_$dyn_storage_ptr",
                "typeString": "contract Record[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 73,
              "nodeType": "Block",
              "src": "391:266:1",
              "statements": [
                {
                  "assignments": [
                    55
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55,
                      "name": "record",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 73,
                      "src": "456:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Record_$180",
                        "typeString": "contract Record"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 54,
                        "name": "Record",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 180,
                        "src": "456:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Record_$180",
                          "typeString": "contract Record"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 66,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 58,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "497:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 59,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 286,
                          "src": "517:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "517:7:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 61,
                        "name": "_encryptedKey1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "539:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 62,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 381,
                          "src": "568:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "568:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 64,
                        "name": "_encryptedKey2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "593:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 57,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "472:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$returns$_t_contract$_Record_$180_$",
                        "typeString": "function (string memory,address,string memory,address,string memory) returns (contract Record)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 56,
                        "name": "Record",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 180,
                        "src": "476:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Record_$180",
                          "typeString": "contract Record"
                        }
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "472:146:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Record_$180",
                      "typeString": "contract Record"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "456:162:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 70,
                        "name": "record",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "642:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Record_$180",
                          "typeString": "contract Record"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Record_$180",
                          "typeString": "contract Record"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 67,
                        "name": "records",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "629:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Record_$180_$dyn_storage",
                          "typeString": "contract Record[] storage ref"
                        }
                      },
                      "id": 69,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "629:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_Record_$180_$returns$__$",
                        "typeString": "function (contract Record)"
                      }
                    },
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "629:20:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72,
                  "nodeType": "ExpressionStatement",
                  "src": "629:20:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "96e8d14c",
            "id": 74,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newRecord",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 74,
                  "src": "238:21:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "238:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49,
                  "name": "_encryptedKey1",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 74,
                  "src": "270:30:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "270:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "name": "_encryptedKey2",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 74,
                  "src": "327:30:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "327:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "227:154:1"
            },
            "returnParameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "391:0:1"
            },
            "scope": 75,
            "src": "209:448:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 76,
        "src": "110:550:1"
      }
    ],
    "src": "0:662:1"
  },
  "legacyAST": {
    "absolutePath": "/D/tutorials/Html_Css/My_Websites/Blockchain Projects/private-records/contracts/Patient.sol",
    "exportedSymbols": {
      "Patient": [
        75
      ]
    },
    "id": 76,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 38,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/ownership/Ownable.sol",
        "file": "@openzeppelin/contracts/ownership/Ownable.sol",
        "id": 39,
        "nodeType": "ImportDirective",
        "scope": 76,
        "sourceUnit": 367,
        "src": "27:55:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/tutorials/Html_Css/My_Websites/Blockchain Projects/private-records/contracts/Record.sol",
        "file": "./Record.sol",
        "id": 40,
        "nodeType": "ImportDirective",
        "scope": 76,
        "sourceUnit": 181,
        "src": "84:22:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 41,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 366,
              "src": "130:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$366",
                "typeString": "contract Ownable"
              }
            },
            "id": 42,
            "nodeType": "InheritanceSpecifier",
            "src": "130:7:1"
          }
        ],
        "contractDependencies": [
          180,
          244,
          366
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 75,
        "linearizedBaseContracts": [
          75,
          366,
          244
        ],
        "name": "Patient",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "34461067",
            "id": 45,
            "name": "records",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 75,
            "src": "177:23:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_Record_$180_$dyn_storage",
              "typeString": "contract Record[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 43,
                "name": "Record",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 180,
                "src": "177:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Record_$180",
                  "typeString": "contract Record"
                }
              },
              "id": 44,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "177:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_Record_$180_$dyn_storage_ptr",
                "typeString": "contract Record[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 73,
              "nodeType": "Block",
              "src": "391:266:1",
              "statements": [
                {
                  "assignments": [
                    55
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55,
                      "name": "record",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 73,
                      "src": "456:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Record_$180",
                        "typeString": "contract Record"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 54,
                        "name": "Record",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 180,
                        "src": "456:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Record_$180",
                          "typeString": "contract Record"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 66,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 58,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "497:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 59,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 286,
                          "src": "517:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "517:7:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 61,
                        "name": "_encryptedKey1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "539:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 62,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 381,
                          "src": "568:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "568:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 64,
                        "name": "_encryptedKey2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "593:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 57,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "472:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$returns$_t_contract$_Record_$180_$",
                        "typeString": "function (string memory,address,string memory,address,string memory) returns (contract Record)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 56,
                        "name": "Record",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 180,
                        "src": "476:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Record_$180",
                          "typeString": "contract Record"
                        }
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "472:146:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Record_$180",
                      "typeString": "contract Record"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "456:162:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 70,
                        "name": "record",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "642:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Record_$180",
                          "typeString": "contract Record"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Record_$180",
                          "typeString": "contract Record"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 67,
                        "name": "records",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "629:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Record_$180_$dyn_storage",
                          "typeString": "contract Record[] storage ref"
                        }
                      },
                      "id": 69,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "629:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_Record_$180_$returns$__$",
                        "typeString": "function (contract Record)"
                      }
                    },
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "629:20:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72,
                  "nodeType": "ExpressionStatement",
                  "src": "629:20:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "96e8d14c",
            "id": 74,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newRecord",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 74,
                  "src": "238:21:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "238:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49,
                  "name": "_encryptedKey1",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 74,
                  "src": "270:30:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "270:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "name": "_encryptedKey2",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 74,
                  "src": "327:30:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "327:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "227:154:1"
            },
            "returnParameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "391:0:1"
            },
            "scope": 75,
            "src": "209:448:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 76,
        "src": "110:550:1"
      }
    ],
    "src": "0:662:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.1+commit.e6f7d5a4.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.20",
  "updatedAt": "2020-02-20T11:22:50.986Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}